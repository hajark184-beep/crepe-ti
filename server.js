const express = require('express');
const sqlite3 = require('sqlite3').verbose();
const path = require('path');
const multer = require('multer');

const app = express();
// const port = 3000; // <<< تم حذف هذا السطر

app.use(express.json());
app.use(express.static(path.join(__dirname, 'public')));

// Multer setup for product and category images
const storage = multer.diskStorage({
    destination: (req, file, cb) => cb(null, 'public/uploads/'),
    filename: (req, file, cb) => cb(null, `${Date.now()}${path.extname(file.originalname)}`)
});
const upload = multer({ storage });

// Multer setup specifically for restaurant and company logos
const logoStorage = multer.diskStorage({
    destination: (req, file, cb) => cb(null, 'public/uploads/'),
    filename: (req, file, cb) => {
        const name = req.params.id ? `logo_${req.params.id}` : 'company_logo';
        cb(null, `${name}${path.extname(file.originalname)}`);
    }
});
const logoUpload = multer({ storage: logoStorage });

const db = new sqlite3.Database('./multi_restaurant.db', (err) => {
    if (err) return console.error("FATAL: Could not connect to database.", err.message);
    console.log('Connected to the multi-restaurant database.');
    initializeDatabase();
});

const ADMIN_USER = 'admin'; const ADMIN_PASS = '12345'; let isAdminAuthenticated = false;
app.post('/login', (req, res) => { if (req.body.username === ADMIN_USER && req.body.password === ADMIN_PASS) { isAdminAuthenticated = true; res.json({ success: true }); } else { isAdminAuthenticated = false; res.status(401).json({ success: false, message: 'بيانات الدخول غير صحيحة' }); } });
function checkAuth(req, res, next) { if (isAdminAuthenticated) return next(); res.status(403).json({ message: 'غير مصرح لك بالوصول' }); }

app.get('/api/restaurants', (req, res) => db.all("SELECT * FROM restaurants", [], (err, rows) => res.json(rows || [])));
app.get('/api/restaurants/:id', (req, res) => db.get("SELECT * FROM restaurants WHERE id = ?", [req.params.id], (err, row) => res.json(row)));
app.put('/api/restaurants/:id/name', checkAuth, (req, res) => db.run(`UPDATE restaurants SET name = ? WHERE id = ?`, [req.body.name, req.params.id], (err) => res.json({ message: 'Updated' })));
app.post('/api/restaurants/:id/logo', checkAuth, logoUpload.single('logo'), (req, res) => { if (!req.file) return res.status(400).json({ message: 'No file uploaded' }); db.run(`UPDATE restaurants SET logo_filename = ? WHERE id = ?`, [req.file.filename, req.params.id], (err) => res.json({ message: 'Logo updated', filename: req.file.filename })); });
app.get('/api/categories', (req, res) => { if (!req.query.restaurant_id) return res.status(400).json({ error: 'Restaurant ID is required' }); db.all("SELECT * FROM categories WHERE restaurant_id = ? ORDER BY id", [req.query.restaurant_id], (err, rows) => res.json(rows || [])); });
app.put('/api/categories/:id/image', checkAuth, upload.single('image'), (req, res) => { if (!req.file) return res.status(400).json({ message: 'No file uploaded' }); db.run(`UPDATE categories SET image_filename = ? WHERE id = ?`, [req.file.filename, req.params.id], function(err) { res.json({ message: 'Image updated', filename: req.file.filename }); }); });
app.get('/api/products', (req, res) => { const { restaurant_id, category } = req.query; if (!restaurant_id) return res.status(400).json({ error: 'Restaurant ID is required' }); let sql = "SELECT * FROM products WHERE restaurant_id = ? ORDER BY name", params = [restaurant_id]; if (category) { sql = "SELECT * FROM products WHERE restaurant_id = ? AND category = ? ORDER BY name"; params.push(category); } db.all(sql, params, (err, rows) => res.json(rows || [])); });
app.post('/api/products', checkAuth, upload.single('image'), (req, res) => { const { name, price, category, description, restaurant_id } = req.body; const image = req.file ? req.file.filename : null; db.run(`INSERT INTO products (name, price, category, description, image_filename, restaurant_id) VALUES (?, ?, ?, ?, ?, ?)`, [name, price, category, description, image, restaurant_id], function(err) { res.json({ id: this.lastID }); }); });
app.delete('/api/products/:id', checkAuth, (req, res) => db.run(`DELETE FROM products WHERE id = ?`, req.params.id, () => res.json({ message: 'Deleted' })));
app.get('/api/settings', (req, res) => { db.all("SELECT key, value FROM settings", [], (err, rows) => { const settings = (rows || []).reduce((acc, row) => ({...acc, [row.key]: row.value }), {}); res.json(settings); }); });
app.put('/api/settings', checkAuth, (req, res) => { const { company_name } = req.body; db.run(`INSERT OR REPLACE INTO settings (key, value) VALUES ('company_name', ?)`, [company_name], (err) => { if(err) return res.status(500).json({error: err.message}); res.json({message: 'Settings updated'}); }); });
app.post('/api/company-logo', checkAuth, logoUpload.single('logo'), (req, res) => { if (!req.file) return res.status(400).json({ message: 'No file uploaded' }); db.run(`INSERT OR REPLACE INTO settings (key, value) VALUES ('company_logo_filename', ?)`, [req.file.filename], (err) => res.json({ message: 'Company logo updated' })); });

const restaurant1_menu = [ { name: 'Margarita', price: 25, category: 'Pizza', description: 'Sauce Tomate, Mozarella, Olive Noir, Origan' }, { name: 'Vegetarienne', price: 30, category: 'Pizza', description: 'Sauce Tomate, Mozarella, Oignion, Poivron, Aubergine, Courgette Olive Noir, Origan' }, { name: 'Thon', price: 35, category: 'Pizza', description: 'Sauce Tomate, Thon, Mozarella, Olive Noir, Origan' }, { name: 'Poulet', price: 38, category: 'Pizza', description: 'Sauce Tomate, Poulet, Mozarella, Olive Noir, Origan' }, { name: 'Pepperoni', price: 42, category: 'Pizza', description: 'Sauce Tomate, Pepperoni, Mozarella, Olive Noir, Origan' }, { name: '4 Saisons', price: 48, category: 'Pizza', description: 'Sauce Tomate, Fruits de mer, Poulet, Viande Hachée, Champigon, Mozarella, Olive Noir, Origan' }, { name: '4 Fromages', price: 48, category: 'Pizza', description: 'Sauce Tomate, Mozarella, Bleu, Edam, Parmesan, Origan' }, { name: 'Viande Hachée (Pizza)', price: 48, category: 'Pizza', description: 'Sauce Tomate, Viande Hachée de Bœuf, Mozarella, Origan' }, { name: 'Fruits de Mer (Pizza)', price: 48, category: 'Pizza', description: 'Sauce Tomate, Calamar, Crevette, Champignon, Mozarella, Origan' }, { name: 'Turkish', price: 55, category: 'Pizza', description: 'Sauce Tomate, Filets de Poulet, Epices Turc, Double Mozarella, Origan' }, { name: 'Tacos Poulet', price: 35, category: 'Tacos', description: 'Solo Frites: 40.00' }, { name: 'Tacos Viande Hachée', price: 35, category: 'Tacos', description: 'Solo Frites: 40.00' }, { name: 'Tacos Cordon Bleu', price: 35, category: 'Tacos', description: 'Solo Frites: 40.00' }, { name: 'Tacos Nuggets', price: 35, category: 'Tacos', description: 'Solo Frites: 40.00' }, { name: 'Tacos Mixte', price: 35, category: 'Tacos', description: 'Solo Frites: 40.00' }, { name: 'Wrap Chicken', price: 35, category: 'Wrap', description: 'Chicken Crispy, Laitue, Tomate, Oignion, Fromage' }, { name: 'Taco Bell', price: 35, category: 'Wrap', description: 'Viande Hachée, Laitue, Tomate, Oignion, Fromage, Sauce' }, { name: 'Fromage Mozzarella', price: 17, category: 'Crepe Salées', description: '' }, { name: 'Fromage Oeuf', price: 19, category: 'Crepe Salées', description: '' }, { name: 'Fromage Charcuterie', price: 24, category: 'Crepe Salées', description: '' }, { name: 'Poulet Champignon', price: 35, category: 'Crepe Salées', description: '' }, { name: 'Viande Hachée (Crepe)', price: 37, category: 'Crepe Salées', description: '' }, { name: 'Mozzarella Pepperoni', price: 40, category: 'Crepe Salées', description: '' }, { name: 'Fruits de Mer (Crepe)', price: 42, category: 'Crepe Salées', description: '' }, { name: 'Caramel', price: 16, category: 'Crepe Sucrées', description: '' }, { name: 'Choco Nutella', price: 16, category: 'Crepe Sucrées', description: '' }, { name: 'Choco Nutella Banane', price: 18, category: 'Crepe Sucrées', description: '' }, { name: 'Double Choco Nutella', price: 20, category: 'Crepe Sucrées', description: '' }, { name: 'Choco Nutella Oreo/Lotus/Fruits Secs', price: 20, category: 'Crepe Sucrées', description: '' }, { name: 'Choco Nutella Kinder', price: 25, category: 'Crepe Sucrées', description: '' }, { name: 'Lotus', price: 22, category: 'Crepe Sucrées', description: '' }, { name: 'Lotus Banane', price: 24, category: 'Crepe Sucrées', description: '' }, { name: 'Mixte Gourmand (Crepe)', price: 30, category: 'Crepe Sucrées', description: 'Nutella, Banane, Oreo, Lotus, Fruits Secs' }, { name: 'Caramel (Waffle)', price: 19, category: 'Gaufres Waffles', description: '' }, { name: 'Choco Nutella (Waffle)', price: 19, category: 'Gaufres Waffles', description: '' }, { name: 'Choco Nutella Banane (Waffle)', price: 22, category: 'Gaufres Waffles', description: '' }, { name: 'Choco Nutella Oreo', price: 23, category: 'Gaufres Waffles', description: '' }, { name: 'Lotus (Waffle)', price: 24, category: 'Gaufres Waffles', description: '' }, { name: 'Mixte Gourmand (Waffle)', price: 33, category: 'Gaufres Waffles', description: 'Nutella, Banane, Oreo, Lotus, Fruits Secs' }, { name: 'Original Pancake', price: 18, category: 'Pancake', description: 'Miel' }, { name: 'Nutella Pancake', price: 18, category: 'Pancake', description: '' }, { name: 'Caramel Pancake', price: 18, category: 'Pancake', description: '' }, { name: 'Banana I Straw Berry Pancake', price: 22, category: 'Pancake', description: '' }, { name: 'Lotus Pancake', price: 24, category: 'Pancake', description: '' }, { name: 'Nutella Mini Pancake x8', price: 24, category: 'Pancake', description: '' }, { name: 'Mixte Gourmand Pancake', price: 35, category: 'Pancake', description: '' }, { name: 'Frutti Di Mare', price: 45, category: 'Pasta', description: 'Crevette, Sepia, Champignon Frais, Fromage Parmesan, Sauce Pesto' }, { name: 'Alfredo', price: 35, category: 'Pasta', description: 'Poulet, Champignon Frais, Tomate Cerise, Fromage Parmesan, Sauce Pesto' }, { name: 'Bolognaise', price: 40, category: 'Pasta', description: 'Viande Hachée, Sauce Tomate, Fromage Rouge, Basilic Frais' }, { name: 'Quatre Fromaggi e Limone', price: 35, category: 'Pasta', description: 'Fromage Parmesan, Gouda, Cheddar, Bleu, Beurre, Citron + Zest de Citron' }, { name: 'Arby\'s', price: 36, category: 'Sandwich', description: 'Viande Hachée de Bœuf, Fromage Blanc, Oignion, Laitue, Tomate, Sauce Maison' }, { name: 'Poulet (Sandwich)', price: 36, category: 'Sandwich', description: 'Poulet, Fromage Cheddar, Laitue, Tomate, Sauce Maison' }, { name: 'Poulet Royal', price: 38, category: 'Sandwich', description: 'Poulet Champignon, Calamar, Dinde Fumée, Fromage Cheddar, Sauce Maison' }, { name: 'Mixte Gourmand (Sandwich)', price: 38, category: 'Sandwich', description: 'Poulet, Viande Hachée de Bœuf, Fromage Blanc, Laitue, Tomate, Sauce Maison' }, { name: 'Espresso', price: 10, category: 'Hot Coffee', description: '' }, { name: 'Double Espresso', price: 13, category: 'Hot Coffee', description: '' }, { name: 'Americano', price: 12, category: 'Hot Coffee', description: '' }, { name: 'Café Latte', price: 13, category: 'Hot Coffee', description: '' }, { name: 'Cappuccino', price: 16, category: 'Hot Coffee', description: '' }, { name: 'Mocha', price: 16, category: 'Hot Coffee', description: '' }, { name: 'Latte Macchiato Caramel', price: 16, category: 'Hot Coffee', description: '' }, { name: 'Hot Chocolate', price: 12, category: 'Hot Coffee', description: '' }, { name: 'Chocolat Fondu', price: 22, category: 'Hot Coffee', description: '' }, { name: 'The Marocayn', price: 12, category: 'Hot Coffee', description: '' }, { name: 'Verveine au Lait', price: 10, category: 'Hot Coffee', description: '' }, { name: 'Orange', price: 15, category: 'Jus', description: '' }, { name: 'Pomme', price: 15, category: 'Jus', description: '' }, { name: 'Banane', price: 15, category: 'Jus', description: '' }, { name: 'Papaye', price: 17, category: 'Jus', description: '' }, { name: 'Ananas', price: 20, category: 'Jus', description: '' }, { name: 'Kiwi', price: 20, category: 'Jus', description: '' }, { name: 'Avocat', price: 20, category: 'Jus', description: '' }, { name: 'Mangue', price: 23, category: 'Jus', description: '' }, { name: 'Tropical', price: 35, category: 'Jus', description: '' }, { name: 'Avocat Fruits Sec', price: 25, category: 'Jus', description: '' }, { name: 'Soda', price: 7, category: 'Soda', description: '' }, { name: 'Simon', price: 8, category: 'Soda', description: '' }, { name: 'Enjoy', price: 15, category: 'Soda', description: '' }, { name: 'Mentos / Redbull / Hell / Oasis', price: 20, category: 'Soda', description: '' }, { name: 'Iced Americano', price: 15, category: 'Ice Coffee', description: '' }, { name: 'Iced Coffee Latte', price: 18, category: 'Ice Coffee', description: '' }, { name: 'Iced Caramel Macchiato', price: 22, category: 'Ice Coffee', description: '' }, { name: 'Iced Spanish Latte', price: 22, category: 'Ice Coffee', description: '' }, { name: 'Iced Mocha', price: 24, category: 'Ice Coffee', description: '' }, { name: 'Iced Chocolate', price: 24, category: 'Ice Coffee', description: '' }, { name: 'Iced Tea Lemon', price: 20, category: 'Ice Tea', description: '' }, { name: 'Iced Tea Strawberry', price: 23, category: 'Ice Tea', description: '' }, { name: 'Iced Tea Passion Fruit', price: 23, category: 'Ice Tea', description: '' }, { name: 'Virgin Mojito', price: 20, category: 'Mocktails', description: '' }, { name: 'Strawberry Mojito', price: 24, category: 'Mocktails', description: '' }, { name: 'Blue Curacao Mojito', price: 24, category: 'Mocktails', description: '' }, { name: 'Pina Colada', price: 30, category: 'Mocktails', description: '' }, { name: 'Blue Hawaiian', price: 32, category: 'Mocktails', description: '' }, { name: 'Caramel Milkshake', price: 24, category: 'Milkshake', description: '' }, { name: 'Vanilla Milkshake', price: 24, category: 'Milkshake', description: '' }, { name: 'Strawberry Milkshake', price: 28, category: 'Milkshake', description: '' }, { name: 'Passion Fruit Milkshake', price: 38, category: 'Milkshake', description: '' }, { name: 'Milkshake', price: 32, category: 'Milkshake', description: '' }, { name: 'Coffee Frapé', price: 35, category: 'Milkshake', description: '' }];
const restaurant2_menu = [ { name: 'Red Berry', price: 30, category: 'Smoothies', description: 'Strawberry, Raspberry, Milk, Strawberry Yogurt' }, { name: 'Green', price: 30, category: 'Smoothies', description: 'Spinach, Lemon, Kiwi, Banana' }, { name: 'Banana Power', price: 30, category: 'Smoothies', description: 'Oats, Yogurt, Banana, Milk' }, { name: 'Mango Oatmeal', price: 30, category: 'Smoothies', description: 'Mango, Oats, Milk, Honey' }, { name: 'Tropical Vibes', price: 30, category: 'Smoothies', description: 'Yogurt, Pineapple, Mango, Banana' }, { name: 'Avocado Energy', price: 30, category: 'Smoothies', description: 'Yogurt, Avocado, Banana, Honey' }, { name: 'Vanilla', price: 25, category: 'Milkshakes', description: '' }, { name: 'Caramel', price: 25, category: 'Milkshakes', description: '' }, { name: 'Chocolate', price: 25, category: 'Milkshakes', description: '' }, { name: 'Strawberry', price: 25, category: 'Milkshakes', description: '' }, { name: 'Banana', price: 25, category: 'Milkshakes', description: '' }, { name: 'Oreo Coffee Frappe', price: 30, category: 'Coffee Frappe', description: '' }, { name: 'Lotus Coffee Frappe', price: 30, category: 'Coffee Frappe', description: '' }, { name: 'Iced Americano', price: 14, category: 'Cold Delights', description: '' }, { name: 'Iced Chocolate', price: 16, category: 'Cold Delights', description: '' }, { name: 'Iced Latte', price: 18, category: 'Cold Delights', description: '' }, { name: 'Iced Mocha', price: 18, category: 'Cold Delights', description: '' }, { name: 'Iced Caramel Macchiato', price: 22, category: 'Cold Delights', description: '' }, { name: 'Iced Strawberry Latte', price: 35, category: 'Speciality Drinks', description: '' }, { name: 'Iced Mango Matcha Latte', price: 35, category: 'Speciality Drinks', description: '' }, { name: 'Golden Iced Latte', price: 25, category: 'Speciality Drinks', description: '' }, { name: 'Pink Iced Latte', price: 25, category: 'Speciality Drinks', description: '' }, { name: 'Matcha Iced Latte', price: 25, category: 'Speciality Drinks', description: '' }, { name: 'Spanish Iced Latte', price: 25, category: 'Speciality Drinks', description: '' }, { name: 'Chai Iced Latte', price: 25, category: 'Speciality Drinks', description: '' }, { name: 'Orange', price: 15, category: 'Juice', description: '' }, { name: 'Pomme', price: 15, category: 'Juice', description: '' }, { name: 'Banane', price: 15, category: 'Juice', description: '' }, { name: 'Papaye', price: 17, category: 'Juice', description: '' }, { name: 'Panaché', price: 17, category: 'Juice', description: '' }, { name: 'Ananas', price: 20, category: 'Juice', description: '' }, { name: 'Kiwi', price: 20, category: 'Juice', description: '' }, { name: 'Avocat', price: 20, category: 'Juice', description: '' }, { name: 'Mangue', price: 23, category: 'Juice', description: '' }, { name: 'Avocat Fruits Sec', price: 25, category: 'Juice', description: '' }, { name: 'Caramel (Crepe)', price: 15, category: 'Crepe Sucrées', description: '' }, { name: 'Nutella', price: 15, category: 'Crepe Sucrées', description: '' }, { name: 'Nutella Banane', price: 20, category: 'Crepe Sucrées', description: '' }, { name: 'Double Nutella', price: 23, category: 'Crepe Sucrées', description: '' }, { name: 'Nutella (Oreo/Lotus/Fruits Secs)', price: 20, category: 'Crepe Sucrées', description: '' }, { name: 'Nutella (Kinder/Kit Kat)', price: 25, category: 'Crepe Sucrées', description: '' }, { name: 'Lotus', price: 22, category: 'Crepe Sucrées', description: '' }, { name: 'Lotus Banane', price: 25, category: 'Crepe Sucrées', description: '' }, { name: 'Lotus Oreo', price: 28, category: 'Crepe Sucrées', description: '' }, { name: 'Mixte Gourmand', price: 33, category: 'Crepe Sucrées', description: 'Nutella, Banane, Oreo, Lotus, Fruits Secs' }, { name: 'Lemon Iced Tea', price: 25, category: 'Speciality Iced Tea', description: '' }, { name: 'Strawberry Iced Tea', price: 25, category: 'Speciality Iced Tea', description: '' }, { name: 'Peach Iced Tea', price: 25, category: 'Speciality Iced Tea', description: '' }, { name: 'Passion Fruit Iced Tea', price: 25, category: 'Speciality Iced Tea', description: '' }, { name: 'Virgin Mojito', price: 20, category: 'Mocktails', description: '' }, { name: 'Strawberry Mojito', price: 25, category: 'Mocktails', description: '' }, { name: 'Blue Curacao Mojito', price: 25, category: 'Mocktails', description: '' }, { name: 'Pina Colada', price: 30, category: 'Mocktails', description: '' }, { name: 'Blue Hawaiian', price: 35, category: 'Mocktails', description: '' }, { name: 'Espresso', price: 8, category: 'Coffee & Tea', description: '' }, { name: 'Double Espresso', price: 12, category: 'Coffee & Tea', description: '' }, { name: 'Americano', price: 10, category: 'Coffee & Tea', description: '' }, { name: 'Cappuccino', price: 14, category: 'Coffee & Tea', description: '' }, { name: 'Cortado', price: 14, category: 'Coffee & Tea', description: '' }, { name: 'Mocha', price: 16, category: 'Coffee & Tea', description: '' }, { name: 'Macchiato', price: 16, category: 'Coffee & Tea', description: '' }, { name: 'Coffee Latte', price: 18, category: 'Coffee & Tea', description: '' }, { name: 'Chocolat Chaud', price: 8, category: 'Coffee & Tea', description: '' }, { name: 'Chocolat Fondu Noir', price: 16, category: 'Coffee & Tea', description: '' }, { name: 'Tea (Selection)', price: 8, category: 'Coffee & Tea', description: '' }, { name: 'Golden Latte', price: 25, category: 'Speciality Drinks', description: '' }, { name: 'Pink Latte', price: 25, category: 'Speciality Drinks', description: '' }, { name: 'Matcha Latte', price: 25, category: 'Speciality Drinks', description: '' }, { name: 'Spanish Latte', price: 25, category: 'Speciality Drinks', description: '' }, { name: 'Chai Tea Latte', price: 25, category: 'Speciality Drinks', description: '' }];

function initializeDatabase() {
    db.serialize(() => {
        db.run(`CREATE TABLE IF NOT EXISTS settings (key TEXT PRIMARY KEY, value TEXT)`);
        db.run(`CREATE TABLE IF NOT EXISTS restaurants (id INTEGER PRIMARY KEY, name TEXT NOT NULL UNIQUE, logo_filename TEXT, whatsapp_number TEXT, phone_number TEXT)`);
        db.run(`CREATE TABLE IF NOT EXISTS categories (id INTEGER PRIMARY KEY, name TEXT NOT NULL, image_filename TEXT, restaurant_id INTEGER, FOREIGN KEY (restaurant_id) REFERENCES restaurants (id), UNIQUE(name, restaurant_id))`);
        db.run(`CREATE TABLE IF NOT EXISTS products (id INTEGER PRIMARY KEY, name TEXT NOT NULL, price REAL NOT NULL, category TEXT NOT NULL, description TEXT, image_filename TEXT, restaurant_id INTEGER, FOREIGN KEY (restaurant_id) REFERENCES restaurants (id))`, (err) => {
            if (err) return console.error("Table creation error:", err.message);
            seedDatabase(startServer);
});
    });
}
function seedDatabase(callback) {
    db.get("SELECT count(*) as count FROM restaurants", (err, row) => {
        if (row && row.count === 0) {
            console.log("Seeding database...");
            db.serialize(() => {
                db.run(`INSERT OR IGNORE INTO settings (key, value) VALUES ('company_name', 'crepe-ti')`);
                db.run(`INSERT INTO restaurants (name, whatsapp_number, phone_number) VALUES (?, ?, ?)`, ['مطعم سلا الجديدة', '212634959651', '212634959651'], function(err) {
                    if (err) return console.error("Seed R1:", err.message);
                    seedRestaurantData(this.lastID, restaurant1_menu, () => {
                        db.run(`INSERT INTO restaurants (name, whatsapp_number, phone_number) VALUES (?, ?, ?)`, ['مطعم سلا شاطئ مרינא', '212715636981', '212715636981'], function(err) {
                            if (err) return console.error("Seed R2:", err.message);
                            seedRestaurantData(this.lastID, restaurant2_menu, () => {
                                console.log("Seeding complete.");
                                callback();
                            });
                        });
                    });
                });
            });
        } else {
            callback();
        }
    });
}
function seedRestaurantData(restoId, menu, callback) {
    const uniqueCategories = [...new Set(menu.map(p => p.category))];
    const catStmt = db.prepare(`INSERT INTO categories (name, restaurant_id) VALUES (?, ?)`);
    uniqueCategories.forEach(cat => catStmt.run(cat, restoId));
    catStmt.finalize((err) => {
        const prodStmt = db.prepare(`INSERT INTO products (name, price, category, description, restaurant_id) VALUES (?, ?, ?, ?, ?)`);
        menu.forEach(p => prodStmt.run(p.name, p.price, p.category, p.description, restoId));
        prodStmt.finalize(callback);
    });
}
function startServer(){
    const PORT = process.env.PORT || 3000;
    app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
}